@model IEnumerable<GamesShop.Models.Product.ProductIndexVM>

@{
    ViewData["Title"] = "Index";
}
<h1>Index</h1>

@if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-controller="Product" asp-action="Index" method="get">
    <p>
        Brand: <input type="text" name="SearchStringBrandName" />
        Category: <input type="text" name="SearchStringCategoryName" />

        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.GenreName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Producer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Picture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GenreName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Producer)
                </td>
                <td>
                    <img src="@Html.DisplayFor(modelItem => item.Picture)" alt="Image" width="100" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discount) %
                </td>

                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-success">Details</a>

                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <a asp-action="Create" asp-controller="Order" asp-route-id="@item.Id" class="btn btn-warning">Order</a>

                        <!-- Add to Cart Button -->
                        <form asp-action="AddToCart" asp-controller="Cart" method="post" style="display:inline;">
                            <input type="hidden" name="ProductId" value="@item.Id" />
                            <input type="hidden" name="ProductName" value="@item.ProductName" />
                            <input type="hidden" name="Picture" value="@item.Picture" />
                            <!-- Optionally include Quantity if needed, but note your controller action doesn't use it -->
                            <input type="hidden" name="price" value="@item.Price.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                            <input type="hidden" name="discount" value="@item.Discount.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
                            <!-- You can remove TotalPrice if it's calculated server-side -->
                            <button type="submit" class="btn btn-primary">Add to Cart</button>
                        </form>



                    }

                    @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Administrator"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

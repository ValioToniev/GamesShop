@model GamesShop.Models.Product.ProductDetailsVM

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Product Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ProductName)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GenreName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GenreName)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CategoryName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CategoryName)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Producer)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Producer)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Picture)
        </dt>
        <dd class="col-sm-10">
            <img src="@Html.DisplayFor(model=>model.Picture)" alt="Image" width="100" />
            @*@Html.DisplayFor(model=>model.Picture)*@
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Discount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Discount)%
        </dd>
    </dl>
</div>

<div>
    @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Administrator"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit</a>
    }
    @if (this.User.Identity.IsAuthenticated)
    {
        <a asp-action="Create" asp-controller="Order" asp-route-id="@Model.Id" class="btn btn-warning">Order</a>

        <!-- Add to Cart Button -->
        <form asp-action="AddToCart" asp-controller="Cart" method="post" style="display:inline;">
            <input type="hidden" name="ProductId" value="@Model.Id" />
            <input type="hidden" name="ProductName" value="@Model.ProductName" />
            <input type="hidden" name="Picture" value="@Model.Picture" />
            <!-- Optionally include Quantity if needed, but note your controller action doesn't use it -->
            <input type="hidden" name="price" value="@Model.Price.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
            <input type="hidden" name="discount" value="@Model.Discount.ToString(System.Globalization.CultureInfo.InvariantCulture)" />
            <!-- You can remove TotalPrice if it's calculated server-side -->
            <button type="submit" class="btn btn-primary">Add to Cart</button>
        </form>



    }
    
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

